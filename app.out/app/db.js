// Compiled by ClojureScript 1.10.520 {:static-fns true, :optimize-constants true}
goog.provide('app.db');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('cljs.reader');
goog.require('cljs.spec.alpha');
cljs.spec.alpha.def_impl(cljs.core.cst$kw$app$db_SLASH_db,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$req_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$app$db_SLASH_results,cljs.core.cst$kw$app$db_SLASH_criteria,cljs.core.cst$kw$app$db_SLASH_fuse], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$app$db_SLASH_results,cljs.core.cst$kw$app$db_SLASH_criteria,cljs.core.cst$kw$app$db_SLASH_fuse], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__26949){
return cljs.core.map_QMARK_(G__26949);
}),(function (G__26949){
return cljs.core.contains_QMARK_(G__26949,cljs.core.cst$kw$results);
}),(function (G__26949){
return cljs.core.contains_QMARK_(G__26949,cljs.core.cst$kw$criteria);
}),(function (G__26949){
return cljs.core.contains_QMARK_(G__26949,cljs.core.cst$kw$fuse);
})], null),(function (G__26949){
return ((cljs.core.map_QMARK_(G__26949)) && (cljs.core.contains_QMARK_(G__26949,cljs.core.cst$kw$results)) && (cljs.core.contains_QMARK_(G__26949,cljs.core.cst$kw$criteria)) && (cljs.core.contains_QMARK_(G__26949,cljs.core.cst$kw$fuse)));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$app$db_SLASH_results,cljs.core.cst$kw$app$db_SLASH_criteria,cljs.core.cst$kw$app$db_SLASH_fuse], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$results,cljs.core.cst$kw$criteria,cljs.core.cst$kw$fuse], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$results)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$criteria)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$fuse))], null),null])));
app.db.default_value = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$results,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$criteria,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$fuse,cljs.core.PersistentArrayMap.EMPTY], null);
